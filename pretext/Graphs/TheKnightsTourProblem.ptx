<?xml version="1.0"?>
<section xml:id="graphs_the-knights-tour-problem">
  <title>The Knight's Tour Problem</title>
  <p>Another classic problem that we can use to illustrate a second common
            graph algorithm is called the knight's tour. The knight's
            tour puzzle is played on a chess board with a single chess piece, the
            knight. The object of the puzzle is to find a sequence of moves that
            allow the knight to visit every square on the board exactly once. One
            such sequence is called a <em>tour</em>. The knight's tour puzzle has
            fascinated chess players, mathematicians, and now, computer scientists,
            for over a thousand years. The upper bound on the number of possible legal tours
            for an <m>8 \times 8</m> chessboard is known to be
            <m>1.305 \times 10^{35}</m>; however, there are even more possible
            dead ends. Clearly this is a problem that requires some real brains,
            some real computing power, or both.</p>
  <p>Although researchers have studied many different algorithms to solve the
            knight's tour problem, a graph search is one of the easiest to
            understand and program. Once again we will solve the problem using two
            main steps:</p>
  <p>
    <ul>
      <li>
        <p>Represent the legal moves of a knight on a chessboard as a graph.</p>
      </li>
      <li>
        <p>Use a graph algorithm to find a path of length
                    <m>rows \times columns - 1</m> where every vertex on the graph is
                    visited exactly once.</p>
      </li>
    </ul>
  </p>
</section>
